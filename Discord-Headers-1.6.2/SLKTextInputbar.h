//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIToolbar.h"

@class NSArray, NSLayoutConstraint, SLKInputAccessoryView, SLKTextView, SLKTextViewController, UIButton, UIColor, UILabel, UIView;

@interface SLKTextInputbar : UIToolbar
{
    BOOL _autoHideRightButton;
    BOOL _editing;
    SLKTextViewController *_controller;
    SLKTextView *_textView;
    SLKInputAccessoryView *_inputAccessoryView;
    UIButton *_leftButton;
    UIButton *_rightButton;
    UIView *_editorContentView;
    UILabel *_editorTitle;
    UIButton *_editorLeftButton;
    UIButton *_editorRightButton;
    float _editorContentViewHeight;
    unsigned int _maxCharCount;
    unsigned int _counterStyle;
    unsigned int _counterPosition;
    UIColor *_charCountLabelNormalColor;
    UIColor *_charCountLabelWarningColor;
    NSLayoutConstraint *_leftButtonWC;
    NSLayoutConstraint *_leftButtonHC;
    NSLayoutConstraint *_leftMarginWC;
    NSLayoutConstraint *_bottomMarginWC;
    NSLayoutConstraint *_rightButtonWC;
    NSLayoutConstraint *_rightMarginWC;
    NSLayoutConstraint *_rightButtonTopMarginC;
    NSLayoutConstraint *_rightButtonBottomMarginC;
    NSLayoutConstraint *_editorContentViewHC;
    NSArray *_charCountLabelVCs;
    UILabel *_charCountLabel;
    Class _textViewClass;
    struct CGPoint _previousOrigin;
    struct UIEdgeInsets _contentInset;
}

+ (BOOL)requiresConstraintBasedLayout;
@property(retain, nonatomic) Class textViewClass; // @synthesize textViewClass=_textViewClass;
@property(nonatomic) struct CGPoint previousOrigin; // @synthesize previousOrigin=_previousOrigin;
@property(retain, nonatomic) UILabel *charCountLabel; // @synthesize charCountLabel=_charCountLabel;
@property(retain, nonatomic) NSArray *charCountLabelVCs; // @synthesize charCountLabelVCs=_charCountLabelVCs;
@property(retain, nonatomic) NSLayoutConstraint *editorContentViewHC; // @synthesize editorContentViewHC=_editorContentViewHC;
@property(retain, nonatomic) NSLayoutConstraint *rightButtonBottomMarginC; // @synthesize rightButtonBottomMarginC=_rightButtonBottomMarginC;
@property(retain, nonatomic) NSLayoutConstraint *rightButtonTopMarginC; // @synthesize rightButtonTopMarginC=_rightButtonTopMarginC;
@property(retain, nonatomic) NSLayoutConstraint *rightMarginWC; // @synthesize rightMarginWC=_rightMarginWC;
@property(retain, nonatomic) NSLayoutConstraint *rightButtonWC; // @synthesize rightButtonWC=_rightButtonWC;
@property(retain, nonatomic) NSLayoutConstraint *bottomMarginWC; // @synthesize bottomMarginWC=_bottomMarginWC;
@property(retain, nonatomic) NSLayoutConstraint *leftMarginWC; // @synthesize leftMarginWC=_leftMarginWC;
@property(retain, nonatomic) NSLayoutConstraint *leftButtonHC; // @synthesize leftButtonHC=_leftButtonHC;
@property(retain, nonatomic) NSLayoutConstraint *leftButtonWC; // @synthesize leftButtonWC=_leftButtonWC;
@property(retain, nonatomic) UIColor *charCountLabelWarningColor; // @synthesize charCountLabelWarningColor=_charCountLabelWarningColor;
@property(retain, nonatomic) UIColor *charCountLabelNormalColor; // @synthesize charCountLabelNormalColor=_charCountLabelNormalColor;
@property(nonatomic) unsigned int counterPosition; // @synthesize counterPosition=_counterPosition;
@property(nonatomic) unsigned int counterStyle; // @synthesize counterStyle=_counterStyle;
@property(nonatomic) unsigned int maxCharCount; // @synthesize maxCharCount=_maxCharCount;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(nonatomic) float editorContentViewHeight; // @synthesize editorContentViewHeight=_editorContentViewHeight;
@property(retain, nonatomic) UIButton *editorRightButton; // @synthesize editorRightButton=_editorRightButton;
@property(retain, nonatomic) UIButton *editorLeftButton; // @synthesize editorLeftButton=_editorLeftButton;
@property(retain, nonatomic) UILabel *editorTitle; // @synthesize editorTitle=_editorTitle;
@property(retain, nonatomic) UIView *editorContentView; // @synthesize editorContentView=_editorContentView;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(nonatomic) BOOL autoHideRightButton; // @synthesize autoHideRightButton=_autoHideRightButton;
@property(retain, nonatomic) UIButton *rightButton; // @synthesize rightButton=_rightButton;
@property(retain, nonatomic) UIButton *leftButton; // @synthesize leftButton=_leftButton;
@property(retain, nonatomic) SLKInputAccessoryView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(retain, nonatomic) SLKTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) __weak SLKTextViewController *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (void)dealloc;
- (void)slk_unregisterNotifications;
- (void)slk_registerNotifications;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)slk_unregisterFrom:(id)arg1 forSelector:(SEL)arg2;
- (void)slk_registerTo:(id)arg1 forSelector:(SEL)arg2;
- (void)slk_updateConstraintConstants;
- (void)slk_setupViewConstraints;
- (void)slk_didChangeContentSizeCategory:(id)arg1;
- (void)slk_didChangeTextViewContentSize:(id)arg1;
- (void)slk_didChangeTextViewText:(id)arg1;
- (void)slk_updateCounter;
- (void)endTextEdition;
- (void)beginTextEditing;
- (BOOL)canEditText:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (unsigned int)slk_defaultNumberOfLines;
- (float)slk_appropriateRightButtonMargin;
- (float)slk_appropriateRightButtonWidth;
@property(readonly, nonatomic) BOOL limitExceeded;
- (float)slk_inputBarHeightForLines:(unsigned int)arg1;
@property(readonly, nonatomic) float appropriateHeight;
@property(readonly, nonatomic) float minimumInputbarHeight;
- (struct CGSize)intrinsicContentSize;
- (void)layoutIfNeeded;
- (void)slk_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithTextViewClass:(Class)arg1;

@end

